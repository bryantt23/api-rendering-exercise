{"version":3,"sources":["components/WorkerInfo.js","components/WorkOrder.js","components/WorkOrders.js","components/WorkerSearch.js","components/ToggleButton.js","App.js","reportWebVitals.js","index.js"],"names":["WorkerInfo","props","workerInfo","className","src","image","alt","name","companyName","email","WorkOrder","order","workers","dt","Date","deadline","dateDisplay","getMonth","toString","padStart","getDate","getFullYear","getHours","getMinutes","getSeconds","description","workerId","WorkOrders","orders","length","map","id","WorkerSearch","setWorkerSearch","onChange","e","target","value","ToggleButton","toggleSelected","earliestFirst","onClick","App","workOrdersApi","useState","workerSearch","setWorkers","setOrders","filteredOrders","setFilteredOrders","setEarliestFirst","a","fetch","res","json","data","useEffect","getOrders","getWorkers","fetchUserInfo","requests","url","Promise","all","workerMap","info","worker","ordersByTime","sort","b","reverse","validWorkers","prop","toLowerCase","includes","push","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f5017a3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './WorkerInfo.css';\r\n\r\nfunction WorkerInfo(props) {\r\n  const { workerInfo } = props;\r\n  if (!workerInfo) return 'No Info';\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='left'>\r\n        <img src={workerInfo.image} alt='worker' />\r\n      </div>\r\n      <div className='right'>\r\n        <h4>Name: {workerInfo.name}</h4>\r\n        <p>Company Name: {workerInfo.companyName}</p>\r\n        <p>Email: {workerInfo.email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorkerInfo;\r\n","import React from 'react';\r\nimport WorkerInfo from './WorkerInfo';\r\n\r\nfunction WorkOrder(props) {\r\n  const { order, workers } = props;\r\n  const dt = new Date(order.deadline);\r\n\r\n  //   https://stackoverflow.com/questions/1056728/where-can-i-find-documentation-on-formatting-a-date-in-javascript\r\n  const dateDisplay = `${(dt.getMonth() + 1)\r\n    .toString()\r\n    .padStart(2, '0')}/${dt\r\n    .getDate()\r\n    .toString()\r\n    .padStart(2, '0')}/${dt\r\n    .getFullYear()\r\n    .toString()\r\n    .padStart(4, '0')} ${dt\r\n    .getHours()\r\n    .toString()\r\n    .padStart(2, '0')}:${dt\r\n    .getMinutes()\r\n    .toString()\r\n    .padStart(2, '0')}:${dt.getSeconds().toString().padStart(2, '0')}`;\r\n\r\n  return (\r\n    <div className='work-order'>\r\n      <h2>{order.name}</h2>\r\n\r\n      <h3>Work Description: {order.description}</h3>\r\n\r\n      <WorkerInfo workerInfo={workers[order.workerId]} />\r\n\r\n      <p className='due-date'>Due Date: {dateDisplay}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorkOrder;\r\n","import React from 'react';\r\nimport WorkOrder from './WorkOrder';\r\n\r\nfunction WorkOrders({ orders, workers }) {\r\n  return (\r\n    <div>\r\n      {orders.length === 0 ? (\r\n        'No orders'\r\n      ) : (\r\n        <div className='container'>\r\n          {orders.map(order => {\r\n            return <WorkOrder key={order.id} order={order} workers={workers} />;\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorkOrders;\r\n","import React from 'react';\r\n\r\nfunction WorkerSearch({ setWorkerSearch }) {\r\n  return (\r\n    <div>\r\n      <input id='name-input' onChange={e => setWorkerSearch(e.target.value)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorkerSearch;\r\n","import React from 'react';\r\nimport './ToggleButton.css';\r\n\r\n// https://dev.to/narendersaini32/how-to-create-custom-toggle-button-in-react-387m\r\nfunction ToggleButton({ toggleSelected, earliestFirst }) {\r\n  return (\r\n    <div>\r\n      Earliest First?\r\n      <div\r\n        className='toggle-container'\r\n        onClick={toggleSelected}\r\n        id='deadline-input'\r\n      >\r\n        <div className={`dialog-button ${earliestFirst ? '' : 'disabled'}`}>\r\n          {earliestFirst ? 'YES' : 'NO'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToggleButton;\r\n","import './App.css';\nimport WorkOrders from './components/WorkOrders';\nimport WorkerSearch from './components/WorkerSearch';\nimport ToggleButton from './components/ToggleButton';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const workOrdersApi = 'https://api.hatchways.io/assessment/work_orders';\n  const workWorkersApi = 'https://api.hatchways.io/assessment/workers/';\n\n  const [workerSearch, setWorkerSearch] = useState('');\n  const [workers, setWorkers] = useState({});\n  const [orders, setOrders] = useState([]);\n  const [filteredOrders, setFilteredOrders] = useState([]);\n  const [earliestFirst, setEarliestFirst] = useState(true);\n\n  async function getOrders() {\n    const res = await fetch(workOrdersApi);\n    const data = await res.json();\n    setOrders(data.orders);\n  }\n\n  useEffect(() => {\n    getOrders();\n  }, []);\n\n  useEffect(() => {\n    getWorkers();\n  }, [orders]);\n\n  // https://www.freecodecamp.org/news/promise-all-in-javascript-with-example-6c8c5aea3e32/\n  // Iterates all users and returns their Github info.\n  const fetchUserInfo = async () => {\n    const requests = orders.map(async order => {\n      const url = workWorkersApi + order.workerId;\n      const data = await fetch(url);\n      const res = await data.json();\n      return res;\n    });\n    return Promise.all(requests); // Waiting for all the requests to get resolved.\n  };\n\n  async function getWorkers() {\n    let workerMap = {};\n    const info = await fetchUserInfo();\n\n    // https://stackoverflow.com/questions/37576685/using-async-await-with-a-foreach-loop\n    for await (const data of info) {\n      let { worker } = data;\n      workerMap[worker.id] = worker;\n    }\n\n    setWorkers(workerMap);\n  }\n\n  useEffect(() => {\n    let ordersByTime = orders.sort((a, b) => a.deadline - b.deadline);\n    if (!earliestFirst) {\n      ordersByTime = orders.reverse();\n    }\n\n    if (workerSearch) {\n      let validWorkers = [];\n      for (let prop in workers) {\n        if (\n          workers[prop].name.toLowerCase().includes(workerSearch.toLowerCase())\n        ) {\n          validWorkers.push(workers[prop].id);\n        }\n      }\n\n      const filteredOrders = ordersByTime.filter(order =>\n        validWorkers.includes(order.workerId)\n      );\n\n      setFilteredOrders(filteredOrders);\n    } else {\n      setFilteredOrders(ordersByTime);\n    }\n  }, [workerSearch, orders, earliestFirst]);\n\n  return (\n    <div className='App'>\n      <ToggleButton\n        earliestFirst={earliestFirst}\n        toggleSelected={() => {\n          setEarliestFirst(!earliestFirst);\n        }}\n      />\n      <WorkerSearch setWorkerSearch={setWorkerSearch} />\n      <WorkOrders\n        workerSearch={workerSearch}\n        orders={filteredOrders}\n        workers={workers}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}